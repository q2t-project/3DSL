// auto-generated by Codex Directive 10 â€” Environment Constants
import { DATA_DIR, LOG_DIR, CACHE_DIR } from "./paths.js";

export const DEFAULT_ENV = {
  MODE: "local",
  DATA_DIR,
  LOG_DIR,
  CACHE_DIR,
  UI_THEME: "dark",
};

function readProcessEnv(key) {
  if (typeof process !== "undefined" && process?.env && key in process.env) {
    return process.env[key];
  }
  return undefined;
}

export function resolveEnvValue(key, overrides = {}) {
  if (key in (overrides || {})) {
    return overrides[key];
  }

  const value = readProcessEnv(key);
  if (typeof value !== "undefined") {
    return value;
  }

  return DEFAULT_ENV[key];
}

export function loadEnvironment(overrides = {}) {
  return Object.keys(DEFAULT_ENV).reduce((env, key) => {
    env[key] = resolveEnvValue(key, overrides);
    return env;
  }, {});
}

export function assertEnvironment(requiredKeys = []) {
  const missing = requiredKeys.filter((key) => typeof resolveEnvValue(key) === "undefined");
  if (missing.length > 0) {
    throw new Error(`Missing required environment keys: ${missing.join(", ")}`);
  }
}

export default {
  DEFAULT_ENV,
  resolveEnvValue,
  loadEnvironment,
  assertEnvironment,
};
