// auto-generated by Codex Directive 08 â€” Path Constants
const normalizePath = (path) => {
  if (typeof path !== "string") {
    return path;
  }
  return path.endsWith("/") ? path : `${path}/`;
};

export const DATA_DIR = normalizePath("/data/");
export const LOG_DIR = normalizePath("/logs/runtime/");
export const CACHE_DIR = normalizePath("/cache/");
export const CODE_ROOT = normalizePath("/code/");
export const COMMON_ROOT = `${CODE_ROOT}common/`;

export function joinPath(base, ...segments) {
  const sanitizedBase = normalizePath(base ?? "");
  const path = segments.reduce((acc, segment) => {
    const cleaned = String(segment).replace(/^\/+|\/+$/g, "");
    return `${acc}${cleaned}/`;
  }, sanitizedBase);
  return path.replace(/\/+/g, "/");
}

export function resolveCommonPath(...segments) {
  if (!segments.length) {
    return COMMON_ROOT;
  }
  const lastSegment = segments[segments.length - 1];
  const leading = segments.slice(0, -1);
  const base = joinPath(COMMON_ROOT, ...leading);
  const sanitizedLast = String(lastSegment).replace(/^\/+/, "");
  return `${base}${sanitizedLast}`.replace(/\/+/g, "/");
}

export default {
  DATA_DIR,
  LOG_DIR,
  CACHE_DIR,
  CODE_ROOT,
  COMMON_ROOT,
  joinPath,
  resolveCommonPath,
};
